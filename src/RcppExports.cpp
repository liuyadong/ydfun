// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// kernel_gauss
arma::mat kernel_gauss(int ksize, double sigma);
RcppExport SEXP _ydfun_kernel_gauss(SEXP ksizeSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type ksize(ksizeSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(kernel_gauss(ksize, sigma));
    return rcpp_result_gen;
END_RCPP
}
// focal_mean
arma::mat focal_mean(arma::mat x, arma::mat kernel, bool globe);
RcppExport SEXP _ydfun_focal_mean(SEXP xSEXP, SEXP kernelSEXP, SEXP globeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type kernel(kernelSEXP);
    Rcpp::traits::input_parameter< bool >::type globe(globeSEXP);
    rcpp_result_gen = Rcpp::wrap(focal_mean(x, kernel, globe));
    return rcpp_result_gen;
END_RCPP
}
// focal_stat_sw
arma::mat focal_stat_sw(arma::mat x, arma::mat y, bool rescale, double xmin, double xmax, double ymin, double ymax, double ksize, bool globe, std::string stat);
RcppExport SEXP _ydfun_focal_stat_sw(SEXP xSEXP, SEXP ySEXP, SEXP rescaleSEXP, SEXP xminSEXP, SEXP xmaxSEXP, SEXP yminSEXP, SEXP ymaxSEXP, SEXP ksizeSEXP, SEXP globeSEXP, SEXP statSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< bool >::type rescale(rescaleSEXP);
    Rcpp::traits::input_parameter< double >::type xmin(xminSEXP);
    Rcpp::traits::input_parameter< double >::type xmax(xmaxSEXP);
    Rcpp::traits::input_parameter< double >::type ymin(yminSEXP);
    Rcpp::traits::input_parameter< double >::type ymax(ymaxSEXP);
    Rcpp::traits::input_parameter< double >::type ksize(ksizeSEXP);
    Rcpp::traits::input_parameter< bool >::type globe(globeSEXP);
    Rcpp::traits::input_parameter< std::string >::type stat(statSEXP);
    rcpp_result_gen = Rcpp::wrap(focal_stat_sw(x, y, rescale, xmin, xmax, ymin, ymax, ksize, globe, stat));
    return rcpp_result_gen;
END_RCPP
}
// focal_stat_tw
arma::mat focal_stat_tw(arma::cube xxx, arma::cube yyy, bool rescale, double xmin, double xmax, double ymin, double ymax, std::string stat);
RcppExport SEXP _ydfun_focal_stat_tw(SEXP xxxSEXP, SEXP yyySEXP, SEXP rescaleSEXP, SEXP xminSEXP, SEXP xmaxSEXP, SEXP yminSEXP, SEXP ymaxSEXP, SEXP statSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type xxx(xxxSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type yyy(yyySEXP);
    Rcpp::traits::input_parameter< bool >::type rescale(rescaleSEXP);
    Rcpp::traits::input_parameter< double >::type xmin(xminSEXP);
    Rcpp::traits::input_parameter< double >::type xmax(xmaxSEXP);
    Rcpp::traits::input_parameter< double >::type ymin(yminSEXP);
    Rcpp::traits::input_parameter< double >::type ymax(ymaxSEXP);
    Rcpp::traits::input_parameter< std::string >::type stat(statSEXP);
    rcpp_result_gen = Rcpp::wrap(focal_stat_tw(xxx, yyy, rescale, xmin, xmax, ymin, ymax, stat));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ydfun_kernel_gauss", (DL_FUNC) &_ydfun_kernel_gauss, 2},
    {"_ydfun_focal_mean", (DL_FUNC) &_ydfun_focal_mean, 3},
    {"_ydfun_focal_stat_sw", (DL_FUNC) &_ydfun_focal_stat_sw, 10},
    {"_ydfun_focal_stat_tw", (DL_FUNC) &_ydfun_focal_stat_tw, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_ydfun(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
