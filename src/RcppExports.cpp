// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// kernel_gauss
arma::mat kernel_gauss(int ksize, double sigma);
RcppExport SEXP _ydfun_kernel_gauss(SEXP ksizeSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type ksize(ksizeSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(kernel_gauss(ksize, sigma));
    return rcpp_result_gen;
END_RCPP
}
// focal_mean
arma::mat focal_mean(arma::mat x, arma::mat kernel, bool global);
RcppExport SEXP _ydfun_focal_mean(SEXP xSEXP, SEXP kernelSEXP, SEXP globalSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type kernel(kernelSEXP);
    Rcpp::traits::input_parameter< bool >::type global(globalSEXP);
    rcpp_result_gen = Rcpp::wrap(focal_mean(x, kernel, global));
    return rcpp_result_gen;
END_RCPP
}
// focal_stat_2d
arma::mat focal_stat_2d(arma::mat x, arma::mat y, bool fuzzy, double xmin, double xmax, double ymin, double ymax, double ksize, bool global, Rcpp::String stat);
RcppExport SEXP _ydfun_focal_stat_2d(SEXP xSEXP, SEXP ySEXP, SEXP fuzzySEXP, SEXP xminSEXP, SEXP xmaxSEXP, SEXP yminSEXP, SEXP ymaxSEXP, SEXP ksizeSEXP, SEXP globalSEXP, SEXP statSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< bool >::type fuzzy(fuzzySEXP);
    Rcpp::traits::input_parameter< double >::type xmin(xminSEXP);
    Rcpp::traits::input_parameter< double >::type xmax(xmaxSEXP);
    Rcpp::traits::input_parameter< double >::type ymin(yminSEXP);
    Rcpp::traits::input_parameter< double >::type ymax(ymaxSEXP);
    Rcpp::traits::input_parameter< double >::type ksize(ksizeSEXP);
    Rcpp::traits::input_parameter< bool >::type global(globalSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type stat(statSEXP);
    rcpp_result_gen = Rcpp::wrap(focal_stat_2d(x, y, fuzzy, xmin, xmax, ymin, ymax, ksize, global, stat));
    return rcpp_result_gen;
END_RCPP
}
// focal_stat_3d
arma::mat focal_stat_3d(arma::cube x, arma::cube y, bool fuzzy, double xmin, double xmax, double ymin, double ymax, Rcpp::String stat);
RcppExport SEXP _ydfun_focal_stat_3d(SEXP xSEXP, SEXP ySEXP, SEXP fuzzySEXP, SEXP xminSEXP, SEXP xmaxSEXP, SEXP yminSEXP, SEXP ymaxSEXP, SEXP statSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type y(ySEXP);
    Rcpp::traits::input_parameter< bool >::type fuzzy(fuzzySEXP);
    Rcpp::traits::input_parameter< double >::type xmin(xminSEXP);
    Rcpp::traits::input_parameter< double >::type xmax(xmaxSEXP);
    Rcpp::traits::input_parameter< double >::type ymin(yminSEXP);
    Rcpp::traits::input_parameter< double >::type ymax(ymaxSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type stat(statSEXP);
    rcpp_result_gen = Rcpp::wrap(focal_stat_3d(x, y, fuzzy, xmin, xmax, ymin, ymax, stat));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ydfun_kernel_gauss", (DL_FUNC) &_ydfun_kernel_gauss, 2},
    {"_ydfun_focal_mean", (DL_FUNC) &_ydfun_focal_mean, 3},
    {"_ydfun_focal_stat_2d", (DL_FUNC) &_ydfun_focal_stat_2d, 10},
    {"_ydfun_focal_stat_3d", (DL_FUNC) &_ydfun_focal_stat_3d, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_ydfun(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
